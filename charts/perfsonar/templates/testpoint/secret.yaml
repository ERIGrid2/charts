{{- $secret_name := sprintf "%s-testpoint" (include "perfsonar.fullname" .) -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secret_name }}
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secret := (lookup "v1" "Secret" .Release.Namespace $secret_name) | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $db_password := (get $secretData "db_password") | default (randAlphaNum 32 | b64enc) }}
  # generate 32 chars long random string, base64 encode it and then double-quote the result string.
  
  db_user: pscheduler
  db_password: {{ $db_password | b64enc | quote }}

  database-dsn: |
    dbname=pscheduler user=pscheduler password={{ $db_password }}

  pscheduler-agent.json: {{ dict "remotes" .Values.testpoint.remotes | toJson }}

{{- if .Values.testpoint.lookup_service.enabled }}
  lsregistrationdaemon.conf: |
    #############################
    # All the information you provide on this file will be sent, recorded  and  made
    # publicly available  on  the  global  perfSONAR  Lookup  Service.  For  privacy
    # reasons, we recommend you use a role or group name and related  email  address
    # to be registered. Any personal information you would provide will be  on  your
    # own responsibility and will by  no  means  represent  an  obligation  for  the
    # perfSONAR  project.  See our Privacy Policy for more information:
    # https://www.perfsonar.net/about/privacy-policy/
    #############################

    ## Optional Location information

    ## Name of site where host is running
    site_name {{ .Values.testpoint.lookup_service.site_name }}

    ## Administrative domain of host in DNS format
    domain {{ .Values.testpoint.lookup_service.domain }}

    ## A keyword identifying a project or community in which the host is involved
    ## You may list multiple of these projects on separate lines.
    {{- range .Values.testpoint.lookup_service.site_projects }}
    site_project {{ . }}
    {{- end }}

    ## City where host is running
    #city {{ .Values.testpoint.lookup_service.city }} Berkeley

    ## Two-letter abbreviation for State/Province/Region where host is running
    #region {{ .Values.testpoint.lookup_service.region }} CA

    ## Two-letter ISO country code for country where host is running
    #country {{ .Values.testpoint.lookup_service.country }} US

    ## Postal code for location where host is running
    #zip_code {{ .Values.testpoint.lookup_service.zip_code }} 94720

    ## Latitude for location here host is running
    #latitude {{ .Values.testpoint.lookup_service.latitude }} 37.5

    ## Longitude for location here host is running
    #longitude {{ .Values.testpoint.lookup_service.longitude }} 121.7469
    #############################

    ## The URL of a lookup service in which to register. If not set, will choose
    ## from global list based on closest RTT. use this to set a private lookup service.
    #ls_instance http://private-ls:8090/lookup/records
    ## configure how long the record must be valid in the LS
    #ls_lease_duration 7200

    ## The interval between service checks to see if a service is still running.
    check_interval		3600       # In seconds

    ## Set this if you don't want private IPs ignored
    allow_internal_addresses     0

    ## Set to 1 if you want to sign records
    add_signature 0
    #signing_key /path/to/key

    #<signature>
    #    certificate_name testhost_ps_certificate
    #    certificate_path /path/to/certificate
    #</signature>

    #<administrator>
    #    name      pS Admin
    #    email     admin@organization.edu
    #</administrator>

    ## Templates containing list of common parameters that services will use
    <service_template local_latency_service>
        autodiscover_addresses   1
    #   primary_interface          eth0
    </service_template>

    <service_template local_bandwidth_service>
        autodiscover_addresses   1
    #   primary_interface          eth1
    </service_template>

    <service_template local_web_service>
        autodiscover_addresses   1
    #   primary_interface          eth2
    </service_template>

    ## List of services to register
    <site>
        <host>
            is_local                   1
            autodiscover               1
            autodiscover_interfaces    1

            ####
            # If you want to publish that only certain tests are allowed on certain interfaces
            # then you need to first do the following:
            #    1. Set autodiscover_interfaces to 0 above
            #    2. List each interface you want published in an interface block
            # Inside the interface block you can define what tests you want run a few different
            # ways. See examples below:
            #
            ##
            ## This interface will only allow throughput and trace tests. It explicitly defines
            ## the tests it supports.
            #<interface>
            #     if_name eth0
            #     disable_autodiscover_tests 1
            #     test throughput
            #     test trace
            #</interface>
            #
            ## This interface will allow any type of test EXCEPT throughput. It will
            ## contact pscheduler for the list of installed plug-ins and will everything
            ## except throughput. You can define disable_test multiple times to disable multiple
            ## tests
            ## the tests it supports.
            #<interface>
            #    # don't run throughput tests
            #    if_name eth1
            #    disable_test throughput
            #</interface>

            <service>
                inherits local_latency_service
                type     owamp
            </service>
            <service>
                inherits local_latency_service
                type     twamp
            </service>
            <service>
                inherits local_web_service
                type ma
                http_port 80
                https_port 443
                url_path /esmond/perfsonar/archive
                service_version esmond-2.0
                autodiscover_tests 0
            </service>
            <service>
                inherits local_web_service
                type pscheduler
                https_port 443
                url_path /pscheduler
                service_version pscheduler-1.0
                autodiscover_tests 1
                autodiscover_tools 1
            </service>
        </host>
    </site>
{{- end -}}
